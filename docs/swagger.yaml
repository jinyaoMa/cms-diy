definitions:
  router.Json200Response:
    properties:
      data:
        $ref: '#/definitions/router.JsonObject'
      success:
        type: boolean
    type: object
  router.Json404Response:
    properties:
      error:
        type: string
    type: object
  router.JsonObject:
    additionalProperties: true
    type: object
info:
  contact:
    name: Github Issues
    url: https://github.com/jinyaoMa/cms-diy/issues
  description: '"try to be a NAS-like CMS"'
  license:
    name: MIT
    url: https://github.com/jinyaoMa/cms-diy/blob/main/LICENSE
  title: CMS_DIY (BACKEND)
  version: 0.0.1
paths:
  /api/deleteFile:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: Delete a file/directory permanently
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      - description: File/Directory ID (root - 0)
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"files":[]}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: DeleteFileForm binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: DeleteFile
      tags:
      - After Authorization
  /api/getFileList:
    get:
      consumes:
      - text/plain
      description: Get file list of user space
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      - description: Depth
        in: query
        name: depth
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"files":[]}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: GetFileListQuery binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: GetFileList
      tags:
      - After Authorization
  /api/getNewToken:
    get:
      consumes:
      - text/plain
      description: Make up a new token to extend expire time
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"token":""}}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: GetNewToken
      tags:
      - After Authorization
  /api/moveFile:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Move a file to destination path
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      - description: File ID
        in: formData
        name: id
        required: true
        type: integer
      - description: To
        in: formData
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"file":{}}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: MoveFileForm binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: MoveFile
      tags:
      - After Authorization
  /api/newFolder:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Change name of a file
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      - description: Destination ID (root - 0)
        in: formData
        name: id
        required: true
        type: integer
      - description: Directory Name
        in: formData
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"file":{}}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: NewFolderForm binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: NewFolder
      tags:
      - After Authorization
  /api/recycle:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Set a file/directory to be recycled
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      - description: File/Directory ID (root - 0)
        in: formData
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"files":[]}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: RecycleFileForm binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: RecycleFile
      tags:
      - After Authorization
  /api/renameFile:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Change name of a file
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      - description: File ID
        in: formData
        name: id
        required: true
        type: integer
      - description: Filename
        in: formData
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"file":{}}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: RenameFileForm binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: RenameFile
      tags:
      - After Authorization
  /api/shareFile:
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: Update the share state of a file
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      - description: File ID
        in: formData
        name: id
        required: true
        type: integer
      - description: ExpireAt
        in: formData
        name: expire
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"file":{}}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: ShareFileForm binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: ShareFile
      tags:
      - After Authorization
  /api/test:
    get:
      consumes:
      - text/plain
      description: Test Token
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"user":"admin","isTokenValid":true}}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "500":
          description: Token generating error
      security:
      - BearerIdAuth: []
      summary: Test
      tags:
      - After Authorization
  /auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Login with account and password
      parameters:
      - description: Account
        in: formData
        name: account
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"userid":1,"username":"cms-diy","role":"admin","permission":"*","token":""}}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: LoginForm binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      summary: Login
      tags:
      - Before Authorization
  /auth/signup:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Signup as a new user with role by invitation code
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Account
        in: formData
        name: account
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Invitation Code
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{"userid":1,"username":"cms-diy","role":"admin","permission":"*","token":""}}'
          schema:
            $ref: '#/definitions/router.Json200Response'
        "400":
          description: SignupForm binding error
        "404":
          description: '{"error":"error msg"}'
          schema:
            $ref: '#/definitions/router.Json404Response'
        "500":
          description: Token generating error
      summary: Signup
      tags:
      - Before Authorization
securityDefinitions:
  BearerIdAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
